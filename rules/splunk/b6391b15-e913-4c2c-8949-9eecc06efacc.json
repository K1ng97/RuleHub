{
  "id": "b6391b15-e913-4c2c-8949-9eecc06efacc",
  "name": "Detect Password Spray Attack Behavior From Source",
  "description": "The following analytic identifies one source failing to authenticate with 10 or more unique users. This behavior could represent an adversary performing a Password Spraying attack to obtain initial access or elevate privileges. This logic can be used for real time security monitoring as well as threat hunting exercises and works well against any number of data sources ingested into the CIM datamodel. Environments can be very different depending on the organization. Test and customize this detections thresholds if needed.",
  "source": {
    "type": "splunk",
    "id": "b6391b15-e913-4c2c-8949-9eecc06efacc",
    "url": "https://github.com/splunk/security_content/blob/develop/detect_password_spray_attack_behavior_from_source.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/detect_password_spray_attack_behavior_from_source.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://attack.mitre.org/techniques/T1110/003/",
    "https://www.microsoft.com/en-us/security/blog/2020/04/23/protecting-organization-password-spray-attacks/",
    "https://github.com/MarkoH17/Spray365"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "| tstats `security_content_summariesonly` max(_time) as lastTime, min(_time) as firstTime, values(Authentication.user_category) as user_category values(Authentication.src_category) as src_category values(Authentication.app) as app count from datamodel=Authentication.Authentication by Authentication.action Authentication.app Authentication.authentication_method Authentication.dest Authentication.signature Authentication.signature_id Authentication.src Authentication.user | `drop_dm_object_name(\"Authentication\")` | eval user=case((match(upper(user),\"[a-zA-Z0-9]{3}\")),upper(user),true(),null), src=upper(src), success=if(action=\"success\",count,0),success_user=if(action=\"success\",user,null),failure=if(action=\"failure\",count,0), failed_user=if(action=\"failure\",user,null) | `detect_password_spray_attack_behavior_from_source_filter` | stats count min(firstTime) as firstTime max(lastTime) as lastTime values(app) as app values(src_category) as src_category values(success_user) as user values(failed_user) as failed_user dc(success_user) as success_dc dc(failed_user) as failed_dc dc(user) as user_dc ,sum(failure) as failure,sum(success) as success by src | fields - _time | where user_dc >= 10 AND .25 > (success/failure) AND failed_dc > success_dc | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`",
    "condition": "This detection requires ingesting authentication data to the appropriate accelerated datamodel. Recommend adjusting the search time window for this correlation to match the number of unique users (user_dc) in hours. i.e. 10 users over 10hrs",
    "fields": []
  },
  "falsepositives": [
    "Domain controllers, authentication chokepoints, and vulnerability scanners."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}