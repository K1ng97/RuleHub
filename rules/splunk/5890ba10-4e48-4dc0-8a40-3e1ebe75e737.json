{
  "id": "5890ba10-4e48-4dc0-8a40-3e1ebe75e737",
  "name": "Linux Auditd Base64 Decode Files",
  "description": "The following analytic detects suspicious Base64 decode operations that may indicate malicious activity, such as data exfiltration or execution of encoded commands. Base64 is commonly used to encode data for safe transmission, but attackers may abuse it to conceal malicious payloads. This detection focuses on identifying unusual or unexpected Base64 decoding processes, particularly when associated with critical files or directories. By monitoring these activities, the analytic helps uncover potential threats, enabling security teams to respond promptly and mitigate risks associated with encoded malware or unauthorized data access.",
  "source": {
    "type": "splunk",
    "id": "5890ba10-4e48-4dc0-8a40-3e1ebe75e737",
    "url": "https://github.com/splunk/security_content/blob/develop/linux_auditd_base64_decode_files.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/linux_auditd_base64_decode_files.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Splunk",
  "references": [
    "https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html",
    "https://gtfobins.github.io/gtfobins/dd/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`linux_auditd` execve_command = \"*base64*\" AND execve_command IN (\"*-d*\", \"* --d*\") | rename host as dest | rename comm as process_name | rename exe as process | stats count min(_time) as firstTime max(_time) as lastTime by argc execve_command dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` |`linux_auditd_base64_decode_files_filter`",
    "condition": "To implement this detection, the process begins by ingesting auditd data, that consist SYSCALL, TYPE, EXECVE and PROCTITLE events, which captures command-line executions and process details on Unix/Linux systems. These logs should be ingested and processed using Splunk Add-on for Unix and Linux (https://splunkbase.splunk.com/app/833), which is essential for correctly parsing and categorizing the data. The next step involves normalizing the field names  to match the field names set by the Splunk Common Information Model (CIM) to ensure consistency across different data sources and enhance the efficiency of data modeling. This approach enables effective monitoring and detection of linux endpoints where auditd is deployed",
    "fields": []
  },
  "falsepositives": [
    "Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}