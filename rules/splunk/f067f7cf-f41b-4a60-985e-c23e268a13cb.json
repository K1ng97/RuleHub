{
  "id": "f067f7cf-f41b-4a60-985e-c23e268a13cb",
  "name": "Windows Audit Policy Cleared via Auditpol",
  "description": "The following analytic identifies the execution of `auditpol.exe` with the \"/clear\" command-line argument used to clears the audit policy. It leverages data from Endpoint Detection and Response (EDR) agents, focusing on process names and command-line executions. This activity can be significant as it indicates potential defense evasion by adversaries or Red Teams, aiming to limit data that can be leveraged for detections and audits. If confirmed malicious, this behavior could allow attackers to bypass defenses, and plan further attacks, potentially leading to full machine compromise or lateral movement.",
  "source": {
    "type": "splunk",
    "id": "f067f7cf-f41b-4a60-985e-c23e268a13cb",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_audit_policy_cleared_via_auditpol.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_audit_policy_cleared_via_auditpol.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Nasreddine Bencherchali, Splunk",
  "references": [
    "https://www.microsoft.com/en-us/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/",
    "https://www.cybereason.com/blog/research/prometei-botnet-exploiting-microsoft-exchange-vulnerabilities",
    "https://attack.mitre.org/techniques/T1562/002/",
    "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/auditpol-clear",
    "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/auditpol-remove"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_auditpol` Processes.process IN (\"*/clear*\", \"*/remove*\") AND NOT Processes.process IN (\"*/resourceSACL*\", \"*/?*\") by Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_exec Processes.parent_process_guid Processes.parent_process_id Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_exec Processes.process_guid Processes.process_hash Processes.process_id Processes.process_integrity_level Processes.process_name Processes.process_path Processes.user Processes.user_id Processes.vendor_product | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_audit_policy_cleared_via_auditpol_filter`",
    "condition": "The detection is based on data that originates from Endpoint Detection and Response (EDR) agents. These agents are designed to provide security-related telemetry from the endpoints where the agent is installed. To implement this search, you must ingest logs that contain the process name, and process original file name. Additionally, you must ingest complete command-line executions. These logs must be processed using the appropriate Splunk Technology Add-ons that are specific to the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint` data model. Use the Splunk Common Information Model (CIM) to normalize the field names and speed up the data modeling process.",
    "fields": []
  },
  "falsepositives": [
    "None identified. Attempts to disable logging should be identified and understood."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}