{
  "id": "afed80b2-d34b-11eb-a952-acde48001122",
  "name": "Powershell Enable SMB1Protocol Feature",
  "description": "The following analytic detects the enabling of the SMB1 protocol via `powershell.exe`. It leverages PowerShell script block logging (EventCode 4104) to identify the execution of the `Enable-WindowsOptionalFeature` cmdlet with the `SMB1Protocol` parameter. This activity is significant because enabling SMB1 can facilitate lateral movement and file encryption by ransomware, such as RedDot. If confirmed malicious, this action could allow an attacker to propagate through the network, encrypt files, and potentially disrupt business operations.",
  "source": {
    "type": "splunk",
    "id": "afed80b2-d34b-11eb-a952-acde48001122",
    "url": "https://github.com/splunk/security_content/blob/develop/powershell_enable_smb1protocol_feature.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/powershell_enable_smb1protocol_feature.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Splunk",
  "references": [
    "https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/",
    "https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`powershell` EventCode=4104 ScriptBlockText = \"*Enable-WindowsOptionalFeature*\" ScriptBlockText = \"*SMB1Protocol*\" | fillnull | stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id user_id vendor_product EventID Guid Opcode Name Path ProcessID ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `powershell_enable_smb1protocol_feature_filter`",
    "condition": "To successfully implement this search, you need to be ingesting logs with the powershell logs  from your endpoints. make sure you enable needed registry to monitor this event.",
    "fields": []
  },
  "falsepositives": [
    "network operator may enable or disable this windows feature."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}