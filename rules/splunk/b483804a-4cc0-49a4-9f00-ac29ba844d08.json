{
  "id": "b483804a-4cc0-49a4-9f00-ac29ba844d08",
  "name": "Windows Process Executed From Removable Media",
  "description": "This analytic is used to identify when a removable media device is attached to a machine and then a process is executed from the same drive letter assigned to the removable media device. Adversaries and Insider Threats may use removable media devices for several malicious activities, including initial access, execution, and exfiltration.",
  "source": {
    "type": "splunk",
    "id": "b483804a-4cc0-49a4-9f00-ac29ba844d08",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_process_executed_from_removable_media.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_process_executed_from_removable_media.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://attack.mitre.org/techniques/T1200/",
    "https://www.cisa.gov/news-events/news/using-caution-usb-drives",
    "https://www.bleepingcomputer.com/news/security/fbi-hackers-use-badusb-to-target-defense-firms-with-ransomware/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_current_directory=* AND NOT Processes.process_current_directory IN (\"C:\\\\*\",\"*\\\\sysvol\\\\*\") \nby Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_exec \nProcesses.parent_process_guid Processes.parent_process_id Processes.parent_process_name \nProcesses.parent_process_path Processes.process Processes.process_exec Processes.process_guid Processes.process_hash \nProcesses.process_id Processes.process_integrity_level Processes.process_name Processes.process_path \nProcesses.user Processes.user_id Processes.vendor_product Processes.process_current_directory\n| `drop_dm_object_name(Processes)` \n| rex field=process_current_directory \"^(?<object_handle>[^\\\\\\]+\\\\\\)\" \n| where isnotnull(object_handle) \n| `security_content_ctime(firstTime)` \n| `security_content_ctime(lastTime)` \n| join dest,object_handle \n  [| tstats `security_content_summariesonly` count values(Registry.action) as action values(Registry.process_guid) as process_guid values(Registry.process_id) as process_id values(Registry.registry_hive) as registry_hive values(Registry.registry_key_name) as registry_key_name values(Registry.registry_value_name) as registry_value_name values(Registry.registry_value_type) as registry_value_type values(Registry.status) as status values(Registry.user) as user values(Registry.vendor_product) as vendor_product from datamodel=Endpoint.Registry where Registry.registry_value_data=\"*:\\\\*\" AND Registry.registry_path=\"*USBSTOR*\" AND Registry.registry_path IN (\"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows Portable Devices\\\\Devices\\\\*\",\"HKLM\\\\System\\\\CurrentControlSet\\\\Enum\\\\SWD\\\\WPDBUSENUM\\\\*\") by Registry.dest,Registry.registry_value_data, Registry.registry_path \n  | `drop_dm_object_name(Registry)` \n  | eval object_handle = registry_value_data, object_name = replace(mvindex(split(mvindex(split(registry_path, \"??\"),1),\"&amp;\"),2),\"PROD_\",\"\")\n      ]\n| `windows_process_executed_from_removable_media_filter`",
    "condition": "To successfully implement this search, you must ingest endpoint logging that tracks changes to the HKLM\\SOFTWARE\\Microsoft\\Windows Portable Devices\\Devices\\ or HKLM\\System\\CurrentControlSet\\Enum\\SWD\\WPDBUSENUM\\ registry keys as well as Process Execution commands. Ensure that the field from the event logs is being mapped to the proper fields in the Endpoint.Registry data model. This analytic joins the Process and Registry datamodels together based on the drive letter extract to the \"object_handle\" field from both datasets.",
    "fields": []
  },
  "falsepositives": [
    "Legitimate USB activity will also be detected. Please verify and investigate as appropriate."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}