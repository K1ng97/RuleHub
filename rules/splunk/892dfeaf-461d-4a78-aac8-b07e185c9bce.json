{
  "id": "892dfeaf-461d-4a78-aac8-b07e185c9bce",
  "name": "PingID New MFA Method Registered For User",
  "description": "The following analytic detects the registration of a new Multi-Factor Authentication (MFA) method for a PingID (PingOne) account. It leverages JSON logs from PingID, specifically looking for successful device pairing events. This activity is significant as adversaries who gain unauthorized access to a user account may register a new MFA method to maintain persistence. If confirmed malicious, this could allow attackers to bypass existing security measures, maintain long-term access, and potentially escalate their privileges within the compromised environment.",
  "source": {
    "type": "splunk",
    "id": "892dfeaf-461d-4a78-aac8-b07e185c9bce",
    "url": "https://github.com/splunk/security_content/blob/develop/pingid_new_mfa_method_registered_for_user.yml",
    "file_path": "tmp/repos/splunk/detections/application/pingid_new_mfa_method_registered_for_user.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://twitter.com/jhencinski/status/1618660062352007174",
    "https://attack.mitre.org/techniques/T1098/005/",
    "https://attack.mitre.org/techniques/T1556/006/",
    "https://docs.pingidentity.com/r/en-us/pingoneforenterprise/p14e_subscriptions?tocId=3xhnxjX3VzKNs3SXigWnQA"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`pingid` \"result.message\"=\"Device Paired*\" result.status=\"SUCCESS\"   | rex field=result.message \"Device (Unp)?(P)?aired (?<device_extract>.+)\" | eval src = coalesce('resources{}.ipaddress','resources{}.devicemodel'), user = upper('actors{}.name'), reason = 'result.message' | eval object=CASE(ISNOTNULL('resources{}.devicemodel'),'resources{}.devicemodel',true(),device_extract) | eval action=CASE(match('result.message',\"Device Paired*\"),\"created\",match('result.message', \"Device Unpaired*\"),\"deleted\") | stats count min(_time) as firstTime, max(_time) as lastTime by src,user,object,action,reason | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `pingid_new_mfa_method_registered_for_user_filter`",
    "condition": "Target environment must ingest JSON logging from a PingID(PingOne) enterprise environment, either via Webhook or Push Subscription.",
    "fields": []
  },
  "falsepositives": [
    "False positives may be generated by normal provisioning workflows for user device registration."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}