{
  "id": "d85c05c8-42c0-4e4a-87e7-4e1bb3e844e3",
  "name": "Cisco Secure Firewall - Communication Over Suspicious Ports",
  "description": "The following analytic detects potential reverse shell activity by identifying connections involving ports commonly associated with remote access tools, shell listeners, or tunneling utilities. It leverages Cisco Secure Firewall Threat Defense logs and monitors destination ports against a list of non-standard, high-risk port values often used in post-exploitation scenarios. Adversaries frequently configure tools like netcat, Meterpreter, or other backdoors to listen or connect over uncommon ports such as 4444, 2222, or 51820 to bypass standard monitoring and firewall rules. If confirmed malicious, this activity may represent command and control (C2) tunneling, lateral movement, or unauthorized remote access.\n",
  "source": {
    "type": "splunk",
    "id": "d85c05c8-42c0-4e4a-87e7-4e1bb3e844e3",
    "url": "https://github.com/splunk/security_content/blob/develop/cisco_secure_firewall___communication_over_suspicious_ports.yml",
    "file_path": "tmp/repos/splunk/detections/network/cisco_secure_firewall___communication_over_suspicious_ports.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Nasreddine Bencherchali, Splunk",
  "references": [
    "https://www.cisco.com/c/en/us/td/docs/security/firepower/741/api/FQE/secure_firewall_estreamer_fqe_guide_740.pdf"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`cisco_secure_firewall` EventType=ConnectionEvent dest_port IN (\"888\", \"999\", \"2200\", \"2222\", \"4000\", \"4444\", \"6789\", \"8531\", \"50501\", \"51820\") | fillnull value=\"unknown\" url\n| stats min(_time) as firstTime max(_time) as lastTime \n      values(src_port) as src_port\n      values(url) as url\n      values(rule) as rule\n      count by src_ip, dest, dest_port, transport, action\n| `security_content_ctime(firstTime)`\n| `security_content_ctime(lastTime)`\n| `cisco_secure_firewall___communication_over_suspicious_ports_filter`\n",
    "condition": "This search requires Cisco Secure Firewall Threat Defense Logs, which\nincludes the ConnectionEvent EventType. This search uses an input macro named `cisco_secure_firewall`.\nWe strongly recommend that you specify your environment-specific configurations\n(index, source, sourcetype, etc.) for Cisco Secure Firewall Threat Defense logs. Replace the macro definition\nwith configurations for your Splunk environment. The search also uses a post-filter\nmacro designed to filter out known false positives.\nThe logs are to be ingested using the Splunk Add-on for Cisco Security Cloud (https://splunkbase.splunk.com/app/7404).\nThe access policy must also enable logging.\nThe search uses a hardcoded list of suspicious ports, you might want to tune those according to your environment\n",
    "fields": []
  },
  "falsepositives": [
    "Some legitimate services or custom applications may use non-standard ports for development, remote management, or internal communication.\nEphemeral ports in test environments may occasionally overlap with ports used in this detection.\nAdditional context such as process name, user behavior, or endpoint telemetry should be used to validate suspicious sessions before escalation.\n"
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}