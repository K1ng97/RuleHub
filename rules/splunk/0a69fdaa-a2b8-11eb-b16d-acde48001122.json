{
  "id": "0a69fdaa-a2b8-11eb-b16d-acde48001122",
  "name": "Excessive Usage of NSLOOKUP App",
  "description": "The following analytic detects excessive usage of the nslookup application, which may indicate potential DNS exfiltration attempts. It leverages Sysmon EventCode 1 to monitor process executions, specifically focusing on nslookup.exe. The detection identifies outliers by comparing the frequency of nslookup executions against a calculated threshold. This activity is significant as it can reveal attempts by malware or APT groups to exfiltrate data via DNS queries. If confirmed malicious, this behavior could allow attackers to stealthily transfer sensitive information out of the network, bypassing traditional data exfiltration defenses.",
  "source": {
    "type": "splunk",
    "id": "0a69fdaa-a2b8-11eb-b16d-acde48001122",
    "url": "https://github.com/splunk/security_content/blob/develop/excessive_usage_of_nslookup_app.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/excessive_usage_of_nslookup_app.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Stanislav Miskovic, Splunk",
  "references": [
    "https://www.mandiant.com/resources/fin7-spear-phishing-campaign-targets-personnel-involved-sec-filings",
    "https://www.varonis.com/blog/dns-tunneling",
    "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "| tstats `security_content_summariesonly` count as numNsLookup min(_time) as firstTime max(_time) as lastTime values(Processes.action) as action values(Processes.original_file_name) as original_file_name values(Processes.parent_process_exec) as parent_process_exec values(Processes.parent_process_guid) as parent_process_guid values(Processes.parent_process_name) as parent_process_name values(Processes.parent_process_path) as parent_process_path values(Processes.process) as process values(Processes.process_exec) as process_exec values(Processes.process_guid) as process_guid values(Processes.process_hash) as process_hash values(Processes.process_id) as process_id values(Processes.process_integrity_level) as process_integrity_level values(Processes.process_path) as process_path values(Processes.user_id) as user_id values(Processes.vendor_product) as vendor_product values(Processes.parent_process) as parent_process values(Processes.process_name) as process_name values(Processes.parent_process_id) as parent_process_id values(Processes.user) as user from datamodel=Endpoint.Processes where Processes.process_name = \"nslookup.exe\" by Processes.dest _time span=1m | `drop_dm_object_name(Processes)` | eventstats avg(numNsLookup) as avgNsLookup, stdev(numNsLookup) as stdNsLookup, count as numSlots by dest | eval upperThreshold=(avgNsLookup + stdNsLookup *3) | eval isOutlier=if(numNsLookup > 20 and numNsLookup >= upperThreshold, 1, 0) | search isOutlier=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `excessive_usage_of_nslookup_app_filter`",
    "condition": "To successfully implement this search, you need to be ingesting logs with the process name, parent process, and command-line executions from your endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the Sysmon TA. Tune and filter known instances of nslookup.exe may be used.",
    "fields": []
  },
  "falsepositives": [
    "unknown"
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}