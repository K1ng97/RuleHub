{
  "id": "0f83244b-425b-4528-83db-7a88c5f66e48",
  "name": "Kubernetes Nginx Ingress LFI",
  "description": "The following analytic detects local file inclusion (LFI) attacks targeting Kubernetes Nginx ingress controllers. It leverages Kubernetes logs, parsing fields such as `request` and `status` to identify suspicious patterns indicative of LFI attempts. This activity is significant because LFI attacks can allow attackers to read sensitive files from the server, potentially exposing critical information. If confirmed malicious, this could lead to unauthorized access to sensitive data, further exploitation, and potential compromise of the Kubernetes environment.",
  "source": {
    "type": "splunk",
    "id": "0f83244b-425b-4528-83db-7a88c5f66e48",
    "url": "https://github.com/splunk/security_content/blob/develop/kubernetes_nginx_ingress_lfi.yml",
    "file_path": "tmp/repos/splunk/detections/cloud/kubernetes_nginx_ingress_lfi.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Patrick Bareiss, Splunk",
  "references": [
    "https://github.com/splunk/splunk-connect-for-kubernetes",
    "https://www.offensive-security.com/metasploit-unleashed/file-inclusion-vulnerabilities/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`kubernetes_container_controller` | rex field=_raw \"^(?<remote_addr>\\S+)\\s+-\\s+-\\s+\\[(?<time_local>[^\\]]*)\\]\\s\\\"(?<request>[^\\\"]*)\\\"\\s(?<status>\\S*)\\s(?<body_bytes_sent>\\S*)\\s\\\"(?<http_referer>[^\\\"]*)\\\"\\s\\\"(?<http_user_agent>[^\\\"]*)\\\"\\s(?<request_length>\\S*)\\s(?<request_time>\\S*)\\s\\[(?<proxy_upstream_name>[^\\]]*)\\]\\s\\[(?<proxy_alternative_upstream_name>[^\\]]*)\\]\\s(?<upstream_addr>\\S*)\\s(?<upstream_response_length>\\S*)\\s(?<upstream_response_time>\\S*)\\s(?<upstream_status>\\S*)\\s(?<req_id>\\S*)\" | rename remote_addr AS src_ip, upstream_status as status, proxy_upstream_name as proxy | rex field=request \"^(?<http_method>\\S+)\\s(?<url>\\S+)\\s\" | eval phase=\"operate\" | eval severity=\"high\" | stats count min(_time) as firstTime max(_time) as lastTime by src_ip, status, url, http_method, host, http_user_agent, proxy, phase, severity, request | lookup local_file_inclusion_paths local_file_inclusion_paths AS request OUTPUT lfi_path | search lfi_path=yes | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `kubernetes_nginx_ingress_lfi_filter`",
    "condition": "You must ingest Kubernetes logs through Splunk Connect for Kubernetes.",
    "fields": []
  },
  "falsepositives": [
    "unknown"
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}