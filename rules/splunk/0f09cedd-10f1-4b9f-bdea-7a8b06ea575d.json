{
  "id": "0f09cedd-10f1-4b9f-bdea-7a8b06ea575d",
  "name": "Windows PowerShell Script Block With Malicious String",
  "description": "The following analytic detects the execution of multiple offensive toolkits and commands by leveraging PowerShell Script Block Logging (EventCode=4104). This method captures and logs the full command sent to PowerShell, allowing for the identification of suspicious activities including several well-known tools used for credential theft, lateral movement, and persistence. If confirmed malicious, this could lead to unauthorized access, privilege escalation, and potential compromise of sensitive information within the environment.",
  "source": {
    "type": "splunk",
    "id": "0f09cedd-10f1-4b9f-bdea-7a8b06ea575d",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_powershell_script_block_with_malicious_string.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_powershell_script_block_with_malicious_string.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://attack.mitre.org/techniques/T1059/001/",
    "https://github.com/PowerShellMafia/PowerSploit",
    "https://github.com/PowerShellEmpire/",
    "https://github.com/S3cur3Th1sSh1t/PowerSharpPack"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`powershell` ScriptBlockText=* EventCode=4104 | stats count min(_time) as firstTime max(_time) as lastTime list(ScriptBlockText) as command values(Guid) as Guid values(Opcode) as Opcode values(Name) as Name values(Path) as Path values(ProcessID) as ProcessID values(ScriptBlockId) as ScriptBlockId values(ScriptBlockText) as ScriptBlockText by dest signature signature_id user_id vendor_product | eval command = mvjoin(command,\"\\n\") | lookup malicious_powershell_strings command | where isnotnull(match) | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_powershell_script_block_with_malicious_string_filter`",
    "condition": "The following analytic requires PowerShell operational logs to be imported. Modify the powershell macro as needed to match the sourcetype or add index. This analytic is specific to 4104, or PowerShell Script Block Logging.",
    "fields": []
  },
  "falsepositives": [
    "Unknown, possible usage by internal red team or powershell commands with overlap."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}