{
  "id": "30c32c5c-41fe-45db-84fe-275e4320da3f",
  "name": "Windows Alternate DataStream - Process Execution",
  "description": "The following analytic detects when a process attempts to execute a file from within an NTFS file system alternate data stream. This detection leverages process execution data from sources like Windows process monitoring or Sysmon Event ID 1, focusing on specific processes known for such behavior. This activity is significant because alternate data streams can be used by threat actors to hide malicious code, making it difficult to detect. If confirmed malicious, this could allow an attacker to execute hidden code, potentially leading to unauthorized actions and further compromise of the system.",
  "source": {
    "type": "splunk",
    "id": "30c32c5c-41fe-45db-84fe-275e4320da3f",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_alternate_datastream___process_execution.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_alternate_datastream___process_execution.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f",
    "https://car.mitre.org/analytics/CAR-2020-08-001/",
    "https://blogs.juniper.net/en-us/threat-research/bitpaymer-ransomware-hides-behind-windows-alternate-data-streams",
    "https://blog.netwrix.com/2022/12/16/alternate_data_stream/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "| tstats count min(_time) as firstTime max(_time) as lastTime values(Processes.process_current_directory) as directory from datamodel=Endpoint.Processes where Processes.parent_process_name != \"unknown\" Processes.process_name IN (\"appvlp.exe\",\"bitsadmin.exe\",\"control.exe\",\"cscript.exe\",\"forfiles.exe\",\"ftp.exe\",\"mavinject.exe\",\"mshta.exe\",\"powershell.exe\",\"powershell_ise.exe\",\"pwsh.exe\",\"regini.exe\",\"regscr32.exe\",\"rundll32.exe\",\"sc.exe\",\"wmic.exe\",\"wscript.exe\") by Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_exec Processes.parent_process_guid Processes.parent_process_id Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_exec Processes.process_guid Processes.process_hash Processes.process_id Processes.process_integrity_level Processes.process_name Processes.process_path Processes.user Processes.user_id Processes.vendor_product | `drop_dm_object_name(Processes)` | regex process=\"(\\b)\\w+(\\.\\w+)?:\\w+(\\.\\w{2,4})(?!\\.)(\\b|\\s|&)\" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_alternate_datastream___process_execution_filter`",
    "condition": "Target environment must ingest process execution data sources such as Windows process monitoring and/or Sysmon EventID 1.",
    "fields": []
  },
  "falsepositives": [
    "False positives may be generated by process executions within the commandline, regex has been provided to minimize the possibilty."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}