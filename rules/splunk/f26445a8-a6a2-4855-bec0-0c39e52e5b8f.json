{
  "id": "f26445a8-a6a2-4855-bec0-0c39e52e5b8f",
  "name": "Cisco Secure Firewall - File Download Over Uncommon Port",
  "description": "The following analytic detects file transfers flagged as malware that occurred over non-standard ports (other than 80 and 443). Adversaries may attempt to bypass protocol-based detection or use alternate ports to blend in with other traffic. This analytic identifies these non-conventional flows and surfaces potential evasion techniques. If confirmed malicious this indicate potential malware delivery or other nefarious activity.\n",
  "source": {
    "type": "splunk",
    "id": "f26445a8-a6a2-4855-bec0-0c39e52e5b8f",
    "url": "https://github.com/splunk/security_content/blob/develop/cisco_secure_firewall___file_download_over_uncommon_port.yml",
    "file_path": "tmp/repos/splunk/detections/network/cisco_secure_firewall___file_download_over_uncommon_port.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Nasreddine Bencherchali, Splunk",
  "references": [
    "https://www.cisco.com/c/en/us/td/docs/security/firepower/741/api/FQE/secure_firewall_estreamer_fqe_guide_740.pdf"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`cisco_secure_firewall` EventType=FileEvent FileDirection=\"Download\" NOT dest_port IN (80, 443)\n| lookup cisco_secure_firewall_filetype_lookup Name as FileType OUTPUT Description\n| stats count min(_time) as firstTime max(_time) as lastTime \n        values(file_name) as file_name \n        values(uri) as uri \n        values(ClientApplication) as ClientApplication\n        values(file_hash) as file_hash \n        values(SHA_Disposition) as SHA_Disposition \n        by FileDirection FileType app ThreatName dest_port Description src_ip dest\n| `security_content_ctime(firstTime)`\n| `security_content_ctime(lastTime)`\n| table firstTime lastTime src_ip dest dest_port FileDirection FileType Description uri ClientApplication file_name file_hash SHA_Disposition ThreatName\n| `cisco_secure_firewall___file_download_over_uncommon_port_filter`\n",
    "condition": "This search requires Cisco Secure Firewall Threat Defense Logs, which\nincludes the FileEvent EventType. This search uses an input macro named `cisco_secure_firewall`.\nWe strongly recommend that you specify your environment-specific configurations\n(index, source, sourcetype, etc.) for Cisco Secure Firewall Threat Defense logs. Replace the macro definition\nwith configurations for your Splunk environment. The search also uses a post-filter\nmacro designed to filter out known false positives.\nThe logs are to be ingested using the Splunk Add-on for Cisco Security Cloud (https://splunkbase.splunk.com/app/7404).\nThe malware & file access policy must also enable logging.\n",
    "fields": []
  },
  "falsepositives": [
    "Some legitimate applications may download files over custom ports (e.g., CDN mirrors, APIs). Apply additional filters accordingly."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}