{
  "id": "f533ca6c-9440-4686-80cb-7f294c07812a",
  "name": "Detect Certify With PowerShell Script Block Logging",
  "description": "The following analytic detects the use of the Certify tool via an in-memory PowerShell function to enumerate Active Directory Certificate Services (AD CS) environments. It leverages PowerShell Script Block Logging (EventCode 4104) to identify specific command patterns associated with Certify's enumeration and exploitation functions. This activity is significant as it indicates potential reconnaissance or exploitation attempts against AD CS, which could lead to unauthorized certificate issuance. If confirmed malicious, attackers could leverage this to escalate privileges, persist in the environment, or access sensitive information by abusing AD CS.",
  "source": {
    "type": "splunk",
    "id": "f533ca6c-9440-4686-80cb-7f294c07812a",
    "url": "https://github.com/splunk/security_content/blob/develop/detect_certify_with_powershell_script_block_logging.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/detect_certify_with_powershell_script_block_logging.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://github.com/GhostPack/Certify",
    "https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`powershell` EventCode=4104 (ScriptBlockText IN (\"*find *\") AND ScriptBlockText IN (\"* /vulnerable*\",\"* -vulnerable*\",\"* /enrolleeSuppliesSubject *\",\"* /json /outfile*\")) OR (ScriptBlockText IN (,\"*auth *\",\"*req *\",) AND ScriptBlockText IN (\"* -ca *\",\"* -username *\",\"* -u *\")) OR (ScriptBlockText IN (\"*request *\",\"*download *\") AND ScriptBlockText IN (\"* /ca:*\")) | fillnull | stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id user_id vendor_product EventID Guid Opcode Name Path ProcessID ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | eval file_name = case(isnotnull(file_name),file_name,true(),\"unknown\") | eval signature = substr(command,0,256) | `detect_certify_with_powershell_script_block_logging_filter`",
    "condition": "To successfully implement this analytic, you will need to enable PowerShell Script Block Logging on some or all endpoints. Additional setup here https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell..",
    "fields": []
  },
  "falsepositives": [
    "Unknown, partial script block matches."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}