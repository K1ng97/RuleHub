{
  "id": "43834687-cc48-4878-a2fa-f76e4271791f",
  "name": "Windows Compatibility Telemetry Tampering Through Registry",
  "description": "This detection identifies suspicious modifications to the Windows Compatibility Telemetry registry settings, specifically within the \"TelemetryController\" registry key and \"Command\" registry value. It leverages data from the Endpoint.Registry data model, focusing on registry paths and values indicative of such changes. This activity is significant because CompatTelRunner.exe and the \"Microsoft Compatibility Appraiser\" task always run as System and can be used to elevate privileges or establish a highly privileged persistence mechanism. If confirmed malicious, this could enable unauthorized code execution, privilege escalation, or persistent access to the compromised system.",
  "source": {
    "type": "splunk",
    "id": "43834687-cc48-4878-a2fa-f76e4271791f",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_compatibility_telemetry_tampering_through_registry.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_compatibility_telemetry_tampering_through_registry.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Steven Dick",
  "references": [
    "https://attack.mitre.org/techniques/T1546/",
    "https://scythe.io/threat-thursday/windows-telemetry-persistence",
    "https://www.trustedsec.com/blog/abusing-windows-telemetry-for-persistence"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "| tstats `security_content_summariesonly` min(_time) as firstTime, max(_time) as lastTime, count FROM datamodel=Endpoint.Registry \nWHERE (Registry.registry_path = \"*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\AppCompatFlags\\\\TelemetryController*\" \nAND Registry.registry_value_name=\"Command\" NOT Registry.registry_value_data IN (\"(empty)\")) \nby Registry.action Registry.dest Registry.process_guid Registry.process_id Registry.registry_hive Registry.registry_path \nRegistry.registry_key_name Registry.registry_value_data Registry.registry_value_name  \nRegistry.registry_value_type Registry.status Registry.user Registry.vendor_product \n| `drop_dm_object_name(Registry)`\n| eval process = registry_value_data \n| `security_content_ctime(firstTime)` \n| `security_content_ctime(lastTime)`\n| `windows_compatibility_telemetry_tampering_through_registry_filter`",
    "condition": "The detection is based on data that originates from Endpoint Detection and Response (EDR) agents. These agents are designed to provide security-related telemetry from the endpoints where the agent is installed. To implement this search, you must ingest logs that contain the process GUID, process name, and parent process. Additionally, you must ingest complete command-line executions. These logs must be processed using the appropriate Splunk Technology Add-ons that are specific to the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint` data model. Use the Splunk Common Information Model (CIM) to normalize the field names and speed up the data modeling process.",
    "fields": []
  },
  "falsepositives": [
    "None identified"
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}