{
  "id": "72013a8e-5cea-408a-9d51-5585386b4d69",
  "name": "Windows Credential Access From Browser Password Store",
  "description": "The following analytic identifies a possible non-common browser process accessing its browser user data profile. This tactic/technique has been observed in various Trojan Stealers, such as SnakeKeylogger, which attempt to gather sensitive browser information and credentials as part of their exfiltration strategy. Detecting this anomaly can serve as a valuable pivot for identifying processes that access lists of browser user data profiles unexpectedly. This detection uses a lookup file `browser_app_list` that maintains a list of well known browser applications and the browser paths that are allowed to access the browser user data profiles.",
  "source": {
    "type": "splunk",
    "id": "72013a8e-5cea-408a-9d51-5585386b4d69",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_credential_access_from_browser_password_store.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_credential_access_from_browser_password_store.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Bhavin Patel Splunk",
  "references": [
    "https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger",
    "https://www.checkpoint.com/cyber-hub/threat-prevention/what-is-malware/snake-keylogger-malware/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`wineventlog_security` EventCode=4663 | stats count by _time object_file_path object_file_name dest process_name process_path process_id EventCode | lookup browser_app_list browser_object_path as object_file_path OUTPUT browser_process_name isAllowed | stats count min(_time) as firstTime max(_time) as lastTime values(object_file_name) values(object_file_path)  values(browser_process_name) as browser_process_name by dest process_name process_path process_id EventCode isAllowed | rex field=process_name \"(?<extracted_process_name>[^\\\\\\\\]+)$\" | eval isMalicious=if(match(browser_process_name, extracted_process_name), \"0\", \"1\") | where isMalicious=1 and isAllowed=\"false\" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_credential_access_from_browser_password_store_filter`",
    "condition": "To successfully implement this search, you must ingest Windows Security Event logs and track event code 4663. For 4663, enable \"Audit Object Access\" in Group Policy. Then check the two boxes listed for both \"Success\" and \"Failure.\" This search may trigger on a browser application that is not included in the browser_app_list lookup file.",
    "fields": []
  },
  "falsepositives": [
    "The lookup file `browser_app_list` may not contain all the browser applications that are allowed to access the browser user data profiles. Consider updating the lookup files to add allowed object paths for the browser applications that are not included in the lookup file."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}