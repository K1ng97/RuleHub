{
  "id": "90964d6a-4b5f-409a-85bd-95e261e03fe9",
  "name": "Linux Auditd Unload Module Via Modprobe",
  "description": "The following analytic detects suspicious use of the `modprobe` command to unload kernel modules, which may indicate an attempt to disable critical system components or evade detection. The `modprobe` utility manages kernel modules, and unauthorized unloading of modules can disrupt system security features, remove logging capabilities, or conceal malicious activities. By monitoring for unusual or unauthorized `modprobe` operations involving module unloading, this analytic helps identify potential tampering with kernel functionality, enabling security teams to investigate and address possible threats to system integrity.",
  "source": {
    "type": "splunk",
    "id": "90964d6a-4b5f-409a-85bd-95e261e03fe9",
    "url": "https://github.com/splunk/security_content/blob/develop/linux_auditd_unload_module_via_modprobe.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/linux_auditd_unload_module_via_modprobe.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Splunk",
  "references": [
    "https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`linux_auditd` execve_command = \"*modprobe*\" AND execve_command = \"*-r *\" | rename host as dest | rename comm as process_name | rename exe as process | stats count min(_time) as firstTime max(_time) as lastTime by argc execve_command dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `linux_auditd_unload_module_via_modprobe_filter`",
    "condition": "To implement this detection, the process begins by ingesting auditd data, that consists of SYSCALL, TYPE, EXECVE and PROCTITLE events, which captures command-line executions and process details on Unix/Linux systems. These logs should be ingested and processed using Splunk Add-on for Unix and Linux (https://splunkbase.splunk.com/app/833), which is essential for correctly parsing and categorizing the data. The next step involves normalizing the field names  to match the field names set by the Splunk Common Information Model (CIM) to ensure consistency across different data sources and enhance the efficiency of data modeling. This approach enables effective monitoring and detection of linux endpoints where auditd is deployed",
    "fields": []
  },
  "falsepositives": [
    "Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}