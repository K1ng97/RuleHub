{
  "id": "c1b7abca-55cb-4a39-bdfb-e28c1c12745f",
  "name": "Linux Auditd Preload Hijack Via Preload File",
  "description": "The following analytic detects suspicious preload hijacking via the  `preload` file, which may indicate an attacker's attempt to intercept or manipulate library loading processes. The `preload` file can be used to force the loading of specific libraries before others, potentially allowing malicious code to execute or alter application behavior. By monitoring for unusual or unauthorized modifications to the `preload` file, this analytic helps identify attempts to hijack preload mechanisms, enabling security teams to investigate and address potential threats to system integrity and security.",
  "source": {
    "type": "splunk",
    "id": "c1b7abca-55cb-4a39-bdfb-e28c1c12745f",
    "url": "https://github.com/splunk/security_content/blob/develop/linux_auditd_preload_hijack_via_preload_file.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/linux_auditd_preload_hijack_via_preload_file.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Splunk",
  "references": [
    "https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`linux_auditd` type=PATH name=\"/etc/ld.so.preload*\" | rename host as dest | stats count min(_time) as firstTime max(_time) as lastTime by name nametype OGID type dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `linux_auditd_preload_hijack_via_preload_file_filter`",
    "condition": "To implement this detection, the process begins by ingesting auditd data, that consist SYSCALL, TYPE, EXECVE and PROCTITLE events, which captures command-line executions and process details on Unix/Linux systems. These logs should be ingested and processed using Splunk Add-on for Unix and Linux (https://splunkbase.splunk.com/app/833), which is essential for correctly parsing and categorizing the data. The next step involves normalizing the field names  to match the field names set by the Splunk Common Information Model (CIM) to ensure consistency across different data sources and enhance the efficiency of data modeling. This approach enables effective monitoring and detection of linux endpoints where auditd is deployed",
    "fields": []
  },
  "falsepositives": [
    "Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}