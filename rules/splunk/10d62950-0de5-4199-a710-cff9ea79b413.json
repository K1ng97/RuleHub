{
  "id": "10d62950-0de5-4199-a710-cff9ea79b413",
  "name": "Elevated Group Discovery with PowerView",
  "description": "The following analytic detects the execution of the `Get-DomainGroupMember` cmdlet from PowerView, identified through PowerShell Script Block Logging (EventCode=4104). This cmdlet is used to enumerate members of elevated domain groups such as Domain Admins and Enterprise Admins. Monitoring this activity is crucial as it indicates potential reconnaissance efforts by adversaries to identify high-privileged users within the domain. If confirmed malicious, this activity could lead to targeted attacks on privileged accounts, facilitating further compromise and lateral movement within the network.",
  "source": {
    "type": "splunk",
    "id": "10d62950-0de5-4199-a710-cff9ea79b413",
    "url": "https://github.com/splunk/security_content/blob/develop/elevated_group_discovery_with_powerview.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/elevated_group_discovery_with_powerview.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Mauricio Velazco, Splunk",
  "references": [
    "https://attack.mitre.org/techniques/T1069/002/",
    "https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainGroupMember/",
    "https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-b--privileged-accounts-and-groups-in-active-directory",
    "https://attack.mitre.org/techniques/T1069/002/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`powershell` EventCode=4104 (ScriptBlockText = \"*Get-DomainGroupMember*\") AND ScriptBlockText IN (\"*Domain Admins*\",\"*Enterprise Admins*\", \"*Schema Admins*\", \"*Account Operators*\" , \"*Server Operators*\", \"*Protected Users*\",  \"*Dns Admins*\") | fillnull | stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id user_id vendor_product EventID Guid Opcode Name Path ProcessID ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `elevated_group_discovery_with_powerview_filter`",
    "condition": "To successfully implement this analytic, you will need to enable PowerShell Script Block Logging on some or all endpoints. Additional setup here https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.",
    "fields": []
  },
  "falsepositives": [
    "Administrators or power users may use this PowerView for troubleshooting."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}