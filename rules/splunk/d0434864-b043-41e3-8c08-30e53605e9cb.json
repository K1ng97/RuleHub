{
  "id": "d0434864-b043-41e3-8c08-30e53605e9cb",
  "name": "Windows SQL Server Critical Procedures Enabled",
  "description": "This detection identifies when critical SQL Server configuration options are modified, including \"Ad Hoc Distributed Queries\", \"external scripts enabled\", \"Ole Automation Procedures\", \"clr enabled\", and \"clr strict security\". These features can be abused by attackers for various malicious purposes - Ad Hoc Distributed Queries enables Active Directory reconnaissance through ADSI provider, external scripts and Ole Automation allow execution of arbitrary code, and CLR features can be used to run custom assemblies. Enabling these features could indicate attempts to gain code execution or perform reconnaissance through SQL Server.",
  "source": {
    "type": "splunk",
    "id": "d0434864-b043-41e3-8c08-30e53605e9cb",
    "url": "https://github.com/splunk/security_content/blob/develop/windows_sql_server_critical_procedures_enabled.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/windows_sql_server_critical_procedures_enabled.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "manual_test",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Michael Haag, Splunk",
  "references": [
    "https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/ad-hoc-distributed-queries-server-configuration-option",
    "https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/external-scripts-enabled-server-configuration-option",
    "https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option",
    "https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/clr-enabled-server-configuration-option",
    "https://www.netspi.com/blog/technical/network-penetration-testing/enumerating-domain-accounts-via-sql-server-using-adsi/",
    "https://attack.mitre.org/techniques/T1505/001/",
    "https://www.netspi.com/blog/technical-blog/adversary-simulation/attacking-sql-server-clr-assemblies/"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`wineventlog_application` EventCode=15457 | rex field=EventData_Xml \"<Data>(?<config_name>[^<]+)</Data><Data>(?<new_value>[^<]+)</Data><Data>(?<old_value>[^<]+)</Data>\" | where config_name IN (\"Ad Hoc Distributed Queries\", \"external scripts enabled\", \"Ole Automation Procedures\", \"clr enabled\", \"clr strict security\") | rename host as dest | eval change_type=case( old_value=\"0\" AND new_value=\"1\", \"enabled\", old_value=\"1\" AND new_value=\"0\", \"disabled\", true(), \"modified\" ) | eval risk_score=case( change_type=\"enabled\", 90, change_type=\"disabled\", 60, true(), 70 ) | eval risk_message=\"SQL Server critical procedure \".config_name.\" was \".change_type.\" on host \".dest.\", which may indicate attempts to gain code execution or perform reconnaissance\" | stats count min(_time) as firstTime max(_time) as lastTime by dest EventCode config_name change_type risk_message risk_score | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_sql_server_critical_procedures_enabled_filter`",
    "condition": "To successfully implement this detection, you need to be ingesting Windows Application Event Logs from SQL Server instances where SQL Server is installed. The detection specifically looks for EventID 15457 which indicates configuration changes to SQL Server features. Ensure proper logging is enabled for SQL Server configuration changes and that the logs are being forwarded to your SIEM.",
    "fields": []
  },
  "falsepositives": [
    "Database administrators may legitimately enable these features for valid business purposes such as cross-database queries, custom CLR assemblies, automation scripts, or application requirements. To reduce false positives, document when these features are required, monitor for unauthorized changes, create change control procedures for configuration modifications, and consider alerting on the enabled state rather than configuration changes if preferred."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}