{
  "id": "018c1972-ca07-11eb-9473-acde48001122",
  "name": "Recon Using WMI Class",
  "description": "The following analytic detects suspicious PowerShell activity via EventCode 4104, where WMI performs event queries to gather information on running processes or services. This detection leverages PowerShell Script Block Logging to identify specific WMI queries targeting system information classes like Win32_Bios and Win32_OperatingSystem. This activity is significant as it often indicates reconnaissance efforts by an adversary to profile the compromised machine. If confirmed malicious, the attacker could gain detailed system information, aiding in further exploitation or lateral movement within the network.",
  "source": {
    "type": "splunk",
    "id": "018c1972-ca07-11eb-9473-acde48001122",
    "url": "https://github.com/splunk/security_content/blob/develop/recon_using_wmi_class.yml",
    "file_path": "tmp/repos/splunk/detections/endpoint/recon_using_wmi_class.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Teoderick Contreras, Splunk",
  "references": [
    "https://news.sophos.com/en-us/2020/05/12/maze-ransomware-1-year-counting/",
    "https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.",
    "https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63",
    "https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf",
    "https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/",
    "https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html",
    "https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/",
    "https://blogs.vmware.com/security/2022/10/lockbit-3-0-also-known-as-lockbit-black.html"
  ],
  "severity": "medium",
  "type": "splunk",
  "status": "production",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`powershell` EventCode=4104 (ScriptBlockText= \"*SELECT*\" OR ScriptBlockText= \"*Get-WmiObject*\") AND (ScriptBlockText= \"*Win32_Bios*\" OR ScriptBlockText= \"*Win32_OperatingSystem*\" OR ScriptBlockText= \"*Win32_Processor*\" OR ScriptBlockText= \"*Win32_ComputerSystem*\" OR ScriptBlockText= \"*Win32_PnPEntity*\" OR ScriptBlockText= \"*Win32_ShadowCopy*\" OR ScriptBlockText= \"*Win32_DiskDrive*\" OR ScriptBlockText= \"*Win32_PhysicalMemory*\") | fillnull | stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id user_id vendor_product EventID Guid Opcode Name Path ProcessID ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `recon_using_wmi_class_filter`",
    "condition": "To successfully implement this analytic, you will need to enable PowerShell Script Block Logging on some or all endpoints. Additional setup here https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.",
    "fields": []
  },
  "falsepositives": [
    "network administrator may used this command for checking purposes"
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}