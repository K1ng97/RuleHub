{
  "id": "19b53215-4a16-405b-8087-9e6acf619842",
  "name": "GCP Kubernetes cluster pod scan detection",
  "description": "The following analytic identifies unauthenticated requests to Kubernetes cluster pods. It detects this activity by analyzing GCP Pub/Sub messages for audit logs where the response status code is 401, indicating unauthorized access attempts. This activity is significant for a SOC because it may indicate reconnaissance or scanning attempts by an attacker trying to identify vulnerable pods. If confirmed malicious, this activity could lead to unauthorized access, allowing the attacker to exploit vulnerabilities within the cluster, potentially compromising sensitive data or gaining control over the Kubernetes environment.",
  "source": {
    "type": "splunk",
    "id": "19b53215-4a16-405b-8087-9e6acf619842",
    "url": "https://github.com/splunk/security_content/blob/develop/gcp_kubernetes_cluster_pod_scan_detection.yml",
    "file_path": "tmp/repos/splunk/detections/cloud/gcp_kubernetes_cluster_pod_scan_detection.yml"
  },
  "tags": [
    "analytic_story",
    "asset_type",
    "mitre_attack_id",
    "product",
    "security_domain"
  ],
  "author": "Rod Soto, Splunk",
  "references": [],
  "severity": "medium",
  "type": "splunk",
  "status": "experimental",
  "created": "2025-05-02",
  "modified": "2025-05-02",
  "mitre": {
    "tactics": [],
    "techniques": []
  },
  "detection": {
    "query": "`google_gcp_pubsub_message` category=kube-audit |spath input=properties.log |search responseStatus.code=401 |table sourceIPs{} userAgent verb requestURI responseStatus.reason properties.pod | `gcp_kubernetes_cluster_pod_scan_detection_filter`",
    "condition": "You must install the GCP App for Splunk (version 2.0.0 or later), then configure stackdriver and set a Pub/Sub subscription to be imported to Splunk.",
    "fields": []
  },
  "falsepositives": [
    "Not all unauthenticated requests are malicious, but frequency, User Agent, source IPs and pods  will provide context."
  ],
  "level": "medium",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": []
}