{
  "id": "50f852e6-af22-4c78-9ede-42ef36aa3453",
  "name": "Potential Azure Browser SSO Abuse",
  "description": "Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.\nAn attacker can use this to authenticate to Azure AD in a browser as that user.\n",
  "source": {
    "type": "sigma",
    "id": "50f852e6-af22-4c78-9ede-42ef36aa3453",
    "url": "https://github.com/SigmaHQ/sigma/blob/master/image_load_dll_azure_microsoft_account_token_provider_dll_load.yml",
    "file_path": "tmp/repos/sigma/rules/windows/image_load/image_load_dll_azure_microsoft_account_token_provider_dll_load.yml"
  },
  "tags": [
    "attackdefense-evasion",
    "attackprivilege-escalation",
    "attackt1574001"
  ],
  "author": "Den Iuzvyk",
  "references": [
    "https://posts.specterops.io/requesting-azure-ad-request-tokens-on-azure-ad-joined-machines-for-browser-sso-2b0409caad30"
  ],
  "severity": "low",
  "type": "sigma",
  "status": "test",
  "created": "2020-07-15",
  "modified": "2023-04-18",
  "mitre": {
    "tactics": [
      "TA1574"
    ],
    "techniques": [
      "T001"
    ]
  },
  "detection": {
    "query": "selection: {\"ImageLoaded\": \"C:\\\\Windows\\\\System32\\\\MicrosoftAccountTokenProvider.dll\"}\nfilter_main_bgtaskhost: {\"Image|startswith\": [\"C:\\\\Windows\\\\System32\\\\\", \"C:\\\\Windows\\\\SysWOW64\\\\\"], \"Image|endswith\": \"\\\\BackgroundTaskHost.exe\"}\nfilter_optional_devenv: {\"Image|startswith\": [\"C:\\\\Program Files\\\\Microsoft Visual Studio\\\\\", \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\\"], \"Image|endswith\": \"\\\\IDE\\\\devenv.exe\"}\nfilter_optional_ie: {\"Image\": [\"C:\\\\Program Files (x86)\\\\Internet Explorer\\\\iexplore.exe\", \"C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe\"]}\nfilter_optional_edge_1: [{\"Image|startswith\": \"C:\\\\Program Files (x86)\\\\Microsoft\\\\EdgeWebView\\\\Application\\\\\"}, {\"Image|endswith\": \"\\\\WindowsApps\\\\MicrosoftEdge.exe\"}, {\"Image\": [\"C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\", \"C:\\\\Program Files\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\"]}]\nfilter_optional_edge_2: {\"Image|startswith\": [\"C:\\\\Program Files (x86)\\\\Microsoft\\\\EdgeCore\\\\\", \"C:\\\\Program Files\\\\Microsoft\\\\EdgeCore\\\\\"], \"Image|endswith\": [\"\\\\msedge.exe\", \"\\\\msedgewebview2.exe\"]}\nfilter_optional_onedrive: {\"Image|endswith\": \"\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\OneDrive.exe\"}\nfilter_optional_null: {\"Image\": null}",
    "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
    "fields": []
  },
  "falsepositives": [
    "False positives are expected since this rules is only looking for the DLL load event. This rule is better used in correlation with related activity"
  ],
  "level": "low",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": [
    "windows",
    "image_load"
  ]
}