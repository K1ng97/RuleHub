{
  "id": "30edb182-aa75-42c0-b0a9-e998bb29067c",
  "name": "Potential AMSI Bypass Via .NET Reflection",
  "description": "Detects Request to \"amsiInitFailed\" that can be used to disable AMSI Scanning",
  "source": {
    "type": "sigma",
    "id": "30edb182-aa75-42c0-b0a9-e998bb29067c",
    "url": "https://github.com/SigmaHQ/sigma/blob/master/proc_creation_win_powershell_amsi_init_failed_bypass.yml",
    "file_path": "tmp/repos/sigma/rules/windows/process_creation/proc_creation_win_powershell_amsi_init_failed_bypass.yml"
  },
  "tags": [
    "attackdefense-evasion",
    "attackt1562001"
  ],
  "author": "Markus Neis, @Kostastsale",
  "references": [
    "https://s3cur3th1ssh1t.github.io/Bypass_AMSI_by_manual_modification/",
    "https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/"
  ],
  "severity": "high",
  "type": "sigma",
  "status": "test",
  "created": "2018-08-17",
  "modified": "2023-02-03",
  "mitre": {
    "tactics": [
      "TA1562"
    ],
    "techniques": [
      "T001"
    ]
  },
  "detection": {
    "query": "selection: [{\"CommandLine|contains|all\": [\"System.Management.Automation.AmsiUtils\", \"amsiInitFailed\"]}, {\"CommandLine|contains|all\": [\"[Ref].Assembly.GetType\", \"SetValue($null,$true)\", \"NonPublic,Static\"]}]",
    "condition": "selection",
    "fields": []
  },
  "falsepositives": [
    "Unlikely"
  ],
  "level": "high",
  "rule_format": "standard",
  "platforms": [],
  "data_sources": [
    "windows",
    "process_creation"
  ]
}